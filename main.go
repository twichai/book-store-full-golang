package main

import (
	"github.com/gofiber/fiber/v2"
	"github.com/gofiber/swagger"
	"gorm.io/driver/sqlite"
	"gorm.io/gorm"

	// docs are generated by Swag CLI, you have to import them.
	// replace with your own docs folder, usually "github.com/username/reponame/docs"
	_ "github.com/twichai/book-store-full-golang/docs"
	handler "github.com/twichai/book-store-full-golang/internal/Handler"
	"github.com/twichai/book-store-full-golang/internal/repository"
	"github.com/twichai/book-store-full-golang/internal/usecase"
)

// @title Fiber Example API
// @version 1.0
// @description This is a sample swagger for Fiber
// @termsOfService http://swagger.io/terms/
// @contact.name API Support
// @contact.email fiber@swagger.io
// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html
// @host localhost:8080
// @BasePath /
func main() {
	app := fiber.New()

	db, err := gorm.Open(sqlite.Open("test.db"), &gorm.Config{})
	if err != nil {
		panic("failed to connect database")
	}

	app.Get("/swagger/*", swagger.HandlerDefault) // default

	bookRepo := repository.NewBookRepository(db)
	bookUsecase := usecase.NewBookUsecase(bookRepo)
	bookHandler := handler.NewBookHandler(bookUsecase)

	app.Get("/books", bookHandler.GetAll)

	app.Get("/hello", hello)

	app.Listen(":8080")
}

// hello godoc
// @Summary      Get Hello Swagger for test
// @Description  Returns a simple hello message
// @Tags         test
// @Accept       json
// @Produce      plain
// @Success      200  {string}  string  "Hello Swagger"
// @Router       /hello [get]
func hello(c *fiber.Ctx) error {
	return c.SendString("Hello Swagger")
}
